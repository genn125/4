import os
from datetime import datetime
import sys
#import subprocess
#import json
#from pathlib import Path

AUDIO_EXTENSIONS = {'.mp3', '.flac', '.wav', '.ogg', '.m4a', '.aac', '.wma'}
# 1 –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–∞—Ö
def has_music_files(folder_path):
    for root, _, files in os.walk(folder_path):
        for file in files:
            if os.path.splitext(file)[1].lower() in AUDIO_EXTENSIONS:
                return True
    return False
# 2 –°–∫–∞–Ω–∏—Ä—É–µ—Ç –¢–û–õ–¨–ö–û –ø–∞–ø–∫–∏ —Å –º—É–∑—ã–∫–æ–π
def scan_music_folders(folder_path):
    #music_folders = str()
    with os.scandir(folder_path) as entries:
        for entry in entries:
            if has_music_files(entry):
                music_folders=f'{entry.path}'# –¢—É—Ç –ø–µ—Ä–µ–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç —Å–∫–∞–Ω–µ—Ä–∞ 1 —É—Ä–æ–≤–Ω—è
    return music_folders

# 3 –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–∞–π–ª
def scan_directory(music_folders, output_file):
    try:
        with open(output_file, "w", encoding="utf-8") as f:
            f.write(f"        –ú–æ–∏ –≥—Ä—É–ø–ø—ã. \n–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞: ({datetime.now().strftime('%H:%M %d-%B-%y')})\n\n")
            for root, dirs, files in os.walk(music_folders):
                level = root.replace(music_folders, "").count(os.sep)
                indent = "‚îÇ   " * level
                # –ü–∞–ø–∫–∞

                f.write(f"{indent}‚îÇ   ‚îú‚îÄüìÅ {os.path.basename(root)}/\n")
                # –§–∞–π–ª—ã
                for file in files:
                    filepath = os.path.join(root, file)
                    try:
                        stat = os.stat(filepath)
                        size = stat.st_size / 1024  # KB
                        #mod_time = datetime.fromtimestamp(stat.st_mtime).strftime("%d.%m.%Y %H:%M")
                        f.write(f"{indent}‚îÇ   ‚îú     üìÑ {file} ({size:.2f} KB)\n")
                    except OSError as e:
                        f.write(f"{indent}‚îÇ  ‚îú‚îÄ‚îÄ ‚ùå {file} (–æ—à–∏–±–∫–∞: {e})\n")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {e}", file=sys.stderr)
        return False



def main():
    print("üîç ...---===–ì–ª—É–±–æ–∫–∏–π —Å–∫–∞–Ω–µ—Ä –ø–∞–ø–æ–∫ —Å —Ñ–∞–π–ª–∞–º–∏===---...")
    folder_path = r'C:\Users\genn1\Downloads'#'\\bananovoeVeslo\2–ú—É–∑—ã–∫–∞\1 –†–£–°–°–ö–ê–Ø' #"/storage/emulated/0/Music"#
    output_file = f"–°–∫–∞–Ω–µ—Ä_–ø–∞–ø–æ–∫_—Å_—Ñ–∞–π–ª–∞–º–∏ ({datetime.now().strftime('%H_%M  %d-%B-%y')}).txt"
    print(f"\n–°–∫–∞–Ω–∏—Ä—É—é '{folder_path}'...")


    """–°–∫–∞–Ω–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –ø–∞–ø–∫–∏ —Å –º—É–∑—ã–∫–æ–π"""
    music_folders = scan_music_folders(folder_path)

    if scan_directory(music_folders, output_file):
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–∞–π–ª\n   '{output_file}'")
    else:
        print("‚ùå –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏", file=sys.stderr)

    print("\n–ü—Ä–∏–º–µ—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ:\n")
    with open(output_file, 'r', encoding='utf-8') as f:
        n = 5550  # –ø–µ—á–∞—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ n —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        print(f.read(n))

if __name__ == "__main__":
    print("\n–°–ö–†–ò–ü–¢ –ó–ê–ü–£–°–ö–ê–ï–¢–°–Ø –ù–ê–ü–†–Ø–ú–£–Æ\n")
    main()
else:
    main()
